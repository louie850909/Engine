//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64
//   row_major float4x4 projection;     // Offset:   64 Size:    64
//   float4 light_direction;            // Offset:  128 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// INSTPOS                  0   xyzw        4     NONE   float   xyz 
// INSTSCL                  0   xyzw        5     NONE   float   xyz 
// INSTROT                  0   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[8], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.xyz
dcl_input v5.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_temps 13
//
// Initial variable locations:
//   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
//   v1.x <- input.normal.x; v1.y <- input.normal.y; v1.z <- input.normal.z; v1.w <- input.normal.w; 
//   v2.x <- input.color.x; v2.y <- input.color.y; v2.z <- input.color.z; v2.w <- input.color.w; 
//   v3.x <- input.texcoord.x; v3.y <- input.texcoord.y; 
//   v4.x <- input.instPos.x; v4.y <- input.instPos.y; v4.z <- input.instPos.z; v4.w <- input.instPos.w; 
//   v5.x <- input.instScl.x; v5.y <- input.instScl.y; v5.z <- input.instScl.z; v5.w <- input.instScl.w; 
//   v6.x <- input.instRot.x; v6.y <- input.instRot.y; v6.z <- input.instRot.z; v6.w <- input.instRot.w; 
//   o3.x <- <main return value>.texcoord.x; o3.y <- <main return value>.texcoord.y; 
//   o2.x <- <main return value>.color.x; o2.y <- <main return value>.color.y; o2.z <- <main return value>.color.z; o2.w <- <main return value>.color.w; 
//   o1.x <- <main return value>.normal.x; o1.y <- <main return value>.normal.y; o1.z <- <main return value>.normal.z; o1.w <- <main return value>.normal.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 8 "D:\Repo\Engine\instancingBillboard_vs.hlsl"
mov r0.x, cb1[0].x  // r0.x <- world._m00
mov r0.y, cb1[1].x  // r0.y <- world._m01
mov r0.z, cb1[2].x  // r0.z <- world._m02
mov r0.w, l(0)  // r0.w <- world._m03
mov r1.x, cb1[0].y  // r1.x <- world._m10
mov r1.y, cb1[1].y  // r1.y <- world._m11
mov r1.z, cb1[2].y  // r1.z <- world._m12
mov r1.w, l(0)  // r1.w <- world._m13
mov r2.x, cb1[0].z  // r2.x <- world._m20
mov r2.y, cb1[1].z  // r2.y <- world._m21
mov r2.z, cb1[2].z  // r2.z <- world._m22
mov r2.w, l(0)  // r2.w <- world._m23
mov r3.xyzw, l(0,0,0,1.000000)  // r3.x <- world._m30; r3.y <- world._m31; r3.z <- world._m32; r3.w <- world._m33

#line 15
mov r4.xyz, l(1.000000,0,0,0)  // r4.x <- trans._m00; r4.y <- trans._m10; r4.z <- trans._m20
mov r4.w, v4.x  // r4.w <- trans._m30
mov r5.xyz, l(0,1.000000,0,0)  // r5.x <- trans._m01; r5.y <- trans._m11; r5.z <- trans._m21
mov r5.w, v4.y  // r5.w <- trans._m31
mov r6.xyz, l(0,0,1.000000,0)  // r6.x <- trans._m02; r6.y <- trans._m12; r6.z <- trans._m22
mov r6.w, v4.z  // r6.w <- trans._m32
mov r7.xyzw, l(0,0,0,1.000000)  // r7.x <- trans._m03; r7.y <- trans._m13; r7.z <- trans._m23; r7.w <- trans._m33

#line 20
mov r8.x, v5.x  // r8.x <- scl._m00
mov r8.yzw, l(0,0,0,0)  // r8.y <- scl._m10; r8.z <- scl._m20; r8.w <- scl._m30
mov r9.xzw, l(0,0,0,0)  // r9.x <- scl._m01; r9.z <- scl._m21; r9.w <- scl._m31
mov r9.y, v5.y  // r9.y <- scl._m11
mov r10.xyw, l(0,0,0,0)  // r10.x <- scl._m02; r10.y <- scl._m12; r10.w <- scl._m32
mov r10.z, v5.z  // r10.z <- scl._m22
mov r11.xyzw, l(0,0,0,1.000000)  // r11.x <- scl._m03; r11.y <- scl._m13; r11.z <- scl._m23; r11.w <- scl._m33

#line 25
dp4 r12.x, r0.xyzw, r8.xyzw  // r12.x <- world._m00
dp4 r12.y, r0.xyzw, r9.xyzw  // r12.y <- world._m01
dp4 r12.z, r0.xyzw, r10.xyzw  // r12.z <- world._m02
dp4 r12.w, r0.xyzw, r11.xyzw  // r12.w <- world._m03
dp4 r0.x, r1.xyzw, r8.xyzw  // r0.x <- world._m10
dp4 r0.y, r1.xyzw, r9.xyzw  // r0.y <- world._m11
dp4 r0.z, r1.xyzw, r10.xyzw  // r0.z <- world._m12
dp4 r0.w, r1.xyzw, r11.xyzw  // r0.w <- world._m13
dp4 r1.x, r2.xyzw, r8.xyzw  // r1.x <- world._m20
dp4 r1.y, r2.xyzw, r9.xyzw  // r1.y <- world._m21
dp4 r1.z, r2.xyzw, r10.xyzw  // r1.z <- world._m22
dp4 r1.w, r2.xyzw, r11.xyzw  // r1.w <- world._m23
dp4 r2.x, r3.xyzw, r8.xyzw  // r2.x <- world._m30
dp4 r2.y, r3.xyzw, r9.xyzw  // r2.y <- world._m31
dp4 r2.z, r3.xyzw, r10.xyzw  // r2.z <- world._m32
dp4 r2.w, r3.xyzw, r11.xyzw  // r2.w <- world._m33

#line 26
dp4 r3.x, r12.xyzw, r4.xyzw  // r3.x <- world._m00
dp4 r3.y, r12.xyzw, r5.xyzw  // r3.y <- world._m01
dp4 r3.z, r12.xyzw, r6.xyzw  // r3.z <- world._m02
dp4 r3.w, r12.xyzw, r7.xyzw  // r3.w <- world._m03
dp4 r8.x, r0.xyzw, r4.xyzw  // r8.x <- world._m10
dp4 r8.y, r0.xyzw, r5.xyzw  // r8.y <- world._m11
dp4 r8.z, r0.xyzw, r6.xyzw  // r8.z <- world._m12
dp4 r0.x, r0.xyzw, r7.xyzw  // r0.x <- world._m13
dp4 r0.y, r1.xyzw, r4.xyzw  // r0.y <- world._m20
dp4 r0.z, r1.xyzw, r5.xyzw  // r0.z <- world._m21
dp4 r0.w, r1.xyzw, r6.xyzw  // r0.w <- world._m22
dp4 r1.x, r1.xyzw, r7.xyzw  // r1.x <- world._m23
dp4 r1.y, r2.xyzw, r4.xyzw  // r1.y <- world._m30
dp4 r1.z, r2.xyzw, r5.xyzw  // r1.z <- world._m31
dp4 r1.w, r2.xyzw, r6.xyzw  // r1.w <- world._m32
dp4 r2.x, r2.xyzw, r7.xyzw  // r2.x <- world._m33

#line 31
mul r4.xyzw, cb1[0].xxxx, cb1[4].xyzw
mul r5.xyzw, cb1[0].yyyy, cb1[5].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb1[0].zzzz, cb1[6].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb1[0].wwww, cb1[7].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb1[1].xxxx, cb1[4].xyzw
mul r6.xyzw, cb1[1].yyyy, cb1[5].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb1[1].zzzz, cb1[6].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb1[1].wwww, cb1[7].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb1[2].xxxx, cb1[4].xyzw
mul r7.xyzw, cb1[2].yyyy, cb1[5].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb1[2].zzzz, cb1[6].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb1[2].wwww, cb1[7].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb1[3].xxxx, cb1[4].xyzw
mul r9.xyzw, cb1[3].yyyy, cb1[5].xyzw
add r7.xyzw, r7.xyzw, r9.xyzw
mul r9.xyzw, cb1[3].zzzz, cb1[6].xyzw
add r7.xyzw, r7.xyzw, r9.xyzw
mul r9.xyzw, cb1[3].wwww, cb1[7].xyzw
add r7.xyzw, r7.xyzw, r9.xyzw
mul r9.xyzw, r3.xxxx, r4.xyzw
mul r10.xyzw, r3.yyyy, r5.xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, r3.zzzz, r6.xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r3.xyzw, r3.wwww, r7.xyzw
add r3.xyzw, r3.xyzw, r9.xyzw
mul r9.xyzw, r4.xyzw, r8.xxxx
mul r10.xyzw, r5.xyzw, r8.yyyy
add r9.xyzw, r9.xyzw, r10.xyzw
mul r8.xyzw, r6.xyzw, r8.zzzz
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, r0.xxxx, r7.xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, r0.yyyy, r4.xyzw
mul r10.xyzw, r0.zzzz, r5.xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r0.xyzw, r0.wwww, r6.xyzw
add r0.xyzw, r0.xyzw, r9.xyzw
mul r9.xyzw, r1.xxxx, r7.xyzw
add r0.xyzw, r0.xyzw, r9.xyzw
mul r4.xyzw, r1.yyyy, r4.xyzw
mul r5.xyzw, r1.zzzz, r5.xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r1.xyzw, r1.wwww, r6.xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r2.xyzw, r2.xxxx, r7.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r3.xyzw, v0.xxxx
mul r3.xyzw, r8.xyzw, v0.yyyy
add r2.xyzw, r2.xyzw, r3.xyzw
mul r0.xyzw, r0.xyzw, v0.zzzz
add r0.xyzw, r0.xyzw, r2.xyzw
mul r1.xyzw, r1.xyzw, v0.wwww
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- output.position.x; r0.y <- output.position.y; r0.z <- output.position.z; r0.w <- output.position.w

#line 32
mov r1.xy, v3.xyxx  // r1.x <- output.texcoord.x; r1.y <- output.texcoord.y

#line 33
mov r2.xyzw, v2.xyzw  // r2.x <- output.color.x; r2.y <- output.color.y; r2.z <- output.color.z; r2.w <- output.color.w

#line 34
mov r3.xyzw, v1.xyzw  // r3.x <- output.normal.x; r3.y <- output.normal.y; r3.z <- output.normal.z; r3.w <- output.normal.w

#line 36
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r3.xyzw
mov o2.xyzw, r2.xyzw
mov o3.xy, r1.xyxx
ret 
// Approximately 130 instruction slots used
