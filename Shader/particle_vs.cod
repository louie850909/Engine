//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64
//   row_major float4x4 projection;     // Offset:   64 Size:    64
//   float4 light_direction;            // Offset:  128 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// INSTPOS                  0   xyzw        4     NONE   float   xyz 
// INSTSCL                  0   xyzw        5     NONE   float   xyz 
// INSTCOLOR                0   xyzw        6     NONE   float   xyzw
// INSTMOVE                 0   xyzw        7     NONE   float       
// INSTLIFE                 0   x           8     NONE   float       
// INSTUSE                  0   x           9     NONE     int   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// INSTUSE                  0   x           4     NONE    uint   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[8], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.xyz
dcl_input v5.xyz
dcl_input v6.xyzw
dcl_input v9.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o4.x
dcl_temps 9
ine r0.x, v9.x, l(0)
if_z r0.x
  mov o0.xyzw, v0.xyzw
  mov o1.xyzw, v1.xyzw
  mov o2.xyzw, v2.xyzw
  mov o3.xy, v3.xyxx
  mov o4.x, l(0)
  ret 
endif 
mul r0.yzw, v5.xxxx, cb1[0].xxyz
mul r1.xyz, v5.yyyy, cb1[1].xyzx
mul r2.xyz, v5.zzzz, cb1[2].xyzx
mul r3.xyzw, cb1[0].yyyy, cb1[5].xyzw
mad r3.xyzw, cb1[0].xxxx, cb1[4].xyzw, r3.xyzw
mad r3.xyzw, cb1[0].zzzz, cb1[6].xyzw, r3.xyzw
mad r3.xyzw, cb1[0].wwww, cb1[7].xyzw, r3.xyzw
mul r4.xyzw, cb1[1].yyyy, cb1[5].xyzw
mad r4.xyzw, cb1[1].xxxx, cb1[4].xyzw, r4.xyzw
mad r4.xyzw, cb1[1].zzzz, cb1[6].xyzw, r4.xyzw
mad r4.xyzw, cb1[1].wwww, cb1[7].xyzw, r4.xyzw
mul r5.xyzw, cb1[2].yyyy, cb1[5].xyzw
mad r5.xyzw, cb1[2].xxxx, cb1[4].xyzw, r5.xyzw
mad r5.xyzw, cb1[2].zzzz, cb1[6].xyzw, r5.xyzw
mad r5.xyzw, cb1[2].wwww, cb1[7].xyzw, r5.xyzw
mul r6.xyzw, cb1[3].yyyy, cb1[5].xyzw
mad r6.xyzw, cb1[3].xxxx, cb1[4].xyzw, r6.xyzw
mad r6.xyzw, cb1[3].zzzz, cb1[6].xyzw, r6.xyzw
mad r6.xyzw, cb1[3].wwww, cb1[7].xyzw, r6.xyzw
mul r7.xyzw, r1.xxxx, r4.xyzw
mad r7.xyzw, r0.yyyy, r3.xyzw, r7.xyzw
mad r7.xyzw, r2.xxxx, r5.xyzw, r7.xyzw
mul r8.xyzw, r1.yyyy, r4.xyzw
mad r8.xyzw, r0.zzzz, r3.xyzw, r8.xyzw
mad r8.xyzw, r2.yyyy, r5.xyzw, r8.xyzw
mul r1.xyzw, r1.zzzz, r4.xyzw
mad r1.xyzw, r0.wwww, r3.xyzw, r1.xyzw
mad r1.xyzw, r2.zzzz, r5.xyzw, r1.xyzw
mul r2.xyzw, r4.xyzw, v4.yyyy
mad r2.xyzw, v4.xxxx, r3.xyzw, r2.xyzw
mad r2.xyzw, v4.zzzz, r5.xyzw, r2.xyzw
add r2.xyzw, r6.xyzw, r2.xyzw
mul r3.xyzw, r8.xyzw, v0.yyyy
mad r3.xyzw, v0.xxxx, r7.xyzw, r3.xyzw
mad r1.xyzw, v0.zzzz, r1.xyzw, r3.xyzw
mad o0.xyzw, v0.wwww, r2.xyzw, r1.xyzw
mov o1.xyzw, v1.xyzw
mov o2.xyzw, v6.xyzw
mov o3.xy, v3.xyxx
mov o4.x, r0.x
ret 
// Approximately 50 instruction slots used
